server:
  port: 8000

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

spring:
  config:
    activate:
      on-profile: default

  application:
    name: apigateway-service

  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
    listener:
      simple:
        prefetch: 5

  cloud:
    gateway:
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            preLogger: true
            postLogger: true
      routes:
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/auth/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/actuator/**
            - Method=GET,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/user/**
          filters:
#            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/users
          filters:
#            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter



        - id: image-service
          uri: lb://IMAGE-SERVICE
          predicates:
            - Path=/image-service/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/image-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter
        - id: image-service
          uri: lb://IMAGE-SERVICE
          predicates:
            - Path=/image-service/**
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/image-service/(?<segment>.*), /$\{segment}
        - id: gathering-service
          uri: lb://GATHERING-SERVICE
          predicates:
            - Path=/gathering-service/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/gathering-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter
        - id: category-service
          uri: lb://CATEGORY-SERVICE
          predicates:
            - Path=/category-service/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/category-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter
        - id: like-service
          uri: lb://LIKE-SERVICE
          predicates:
            - Path=/like-service/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/like-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter
        - id: meeting-service
          uri: lb://MEETING-SERVICE
          predicates:
            - Path=/meeting-service/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/meeting-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter
        - id: alarm-service
          uri: lb://ALARM-SERVICE
          predicates:
            - Path=/alarm-service/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/alarm-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter



token:
  secret: S3cr3tK3yS3cr3tK3yS3cr3tK3yS3cr3tK3yS3cr3tK3yS3cr3tK3y

management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, httpexchanges, busrefresh, info, metrics, prometheus
